


import sqlConnection from "../connection/sql";

const table = '<%= service.charAt(0).toUpperCase() + service.slice(1) %>s';
import logging from "../services/logger";
import { DataTypes }  from "sequelize";



// Define schema
const schemaObject = {
    // ++++++++++++++ Modify to your own schema ++++++++++++++++++
    _id :{
        type: DataTypes.INTEGER,
        primaryKey: true,
        autoIncrement: true
    },
    name: {
        type: DataTypes.STRING
    },
    someOtherStringData: {
        type: DataTypes.STRING
    },
    // ++++++++++++++ Modify to your own schema ++++++++++++++++++
};





// Define the table
const <%= service.charAt(0).toUpperCase() + service.slice(1) +'s'  %>= sqlConnection.define(table, schemaObject, {
    // Don't really delete data
    // paranoid: true,
    // define indexes here
   
    indexes: [{
        unique: true,
        fields:['_id']
    }]
});


// table.hasMany(<%= service %>s, {foreignKey: 'toPop', sourceKey: '_id'});

// Adding hooks
<%= service.charAt(0).toUpperCase() + service.slice(1) +'s' %>.afterCreate(function(user, options) {
    // Indexing for search
    // var ourDoc = user.dataValues;
    // ourDoc.isSQL = true;
    // ourDoc.model = table;

    // Dump it in the queue
    //  queue.create('searchIndex', ourDoc)
    //  .save();
});

<%= service.charAt(0).toUpperCase() + service.slice(1) +'s' %>.sync();


export default <%= service.charAt(0).toUpperCase() + service.slice(1) +'s' %>;

